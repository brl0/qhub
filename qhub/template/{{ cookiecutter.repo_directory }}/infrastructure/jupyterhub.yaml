hub:
{% if cookiecutter.security.authentication.type == 'Auth0' %}
  config:
    Auth0OAuthenticator:
      client_id: "{{ cookiecutter.security.authentication.config.client_id }}"
      client_secret: "{{ cookiecutter.security.authentication.config.client_secret }}"
      oauth_callback_url: "{{ cookiecutter.security.authentication.config.oauth_callback_url }}"
      scope: {{ cookiecutter.security.authentication.config.scope | jsonify }}
      auth0_subdomain: "{{ cookiecutter.security.authentication.config.auth0_subdomain }}"
    JupyterHub:
      authenticator_class: oauthenticator.auth0.Auth0OAuthenticator
  extraEnv:
    AUTH0_SUBDOMAIN: "{{ cookiecutter.security.authentication.config.auth0_subdomain }}"
{% elif cookiecutter.security.authentication.type == 'GitHub' %}
  config:
    GitHubOAuthenticator:
      client_id: "{{ cookiecutter.security.authentication.config.client_id }}"
      client_secret: "{{ cookiecutter.security.authentication.config.client_secret }}"
      oauth_callback_url: "{{ cookiecutter.security.authentication.config.oauth_callback_url }}"
    JupyterHub:
      authenticator_class: github
{% endif %}
  extraConfig:
    jupyterhub_config: |
{% filter indent(width=6) %}
{% include "templates/jupyterhub_config.py.j2" %}
{% endfilter %}

cull:
  enabled: true
  timeout: 1800 # cull after 30min of inactivity
  every: 600
